name: Vercel Sync

on:
  workflow_dispatch:

  schedule:
    - cron: 0 */6 * * *

env:
  DATABASE: ${{ secrets.DATABASE }}

jobs:
  watermark:
    runs-on: ubuntu-latest
    name: Watermark on Vercel
    env:
      project: Watermark
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: python -m pip install --upgrade pymongo dnspython
      - name: Check Upstream
        id: watermark
        run: |
          VER=$(curl -s -N https://api.github.com/repos/Apocalypsor/watermark/commits | grep -o '[0-9a-z]\{40\}' | head -n 1)
          result=$(python Vercel/check.py $project $VER)
          [[ $result ]] && echo "VER=$VER" >> $GITHUB_ENV || true
          [[ $result ]] && echo "::set-output name=status::proceed" || echo "Updated!"
      - name: Update
        if: steps.watermark.outputs.status == 'proceed'
        run: |
          git clone --depth 1 https://github.com/Apocalypsor/watermark vercel
          cd vercel && git reset --hard ${{ env.VER }}
      - name: Vercel Deploy
        id: watermark-deploy
        if: steps.watermark.outputs.status == 'proceed'
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-comment: false
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: 'QmdKKBEMcfW8RkmkPg8ThjDfhjg79rf8HLeJFiKbCHw6qd'
          working-directory: ./vercel
      - name: Update
        if: steps.watermark-deploy.outputs.preview-url && steps.watermark.outputs.status == 'proceed'
        run: python Vercel/update.py $project ${{ env.VER }}
  
  rsshub:
    runs-on: ubuntu-latest
    name: RSSHub on Vercel
    env:
      project: RSSHub
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: python -m pip install --upgrade pymongo dnspython
      - name: Check Upstream
        id: rsshub
        run: |
          VER=$(curl -s -N https://api.github.com/repos/DIYgod/RSSHub/commits | grep -o '[0-9a-z]\{40\}' | head -n 1)
          result=$(python Vercel/check.py $project $VER)
          [[ $result ]] && echo "VER=$VER" >> $GITHUB_ENV || true
          [[ $result ]] && echo "::set-output name=status::proceed" || echo "Updated!"
      - name: Update
        if: steps.rsshub.outputs.status == 'proceed'
        run: |
          git clone --depth 1 https://github.com/DIYgod/RSSHub vercel
          cd vercel && git reset --hard ${{ env.VER }}
      - name: Vercel Deploy
        id: rsshub-deploy
        if: steps.rsshub.outputs.status == 'proceed'
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-comment: false
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: 'prj_WjePlOAliVkvd0gUV4O2EliHqLvG'
          working-directory: ./vercel
      - name: Update
        if: steps.rsshub-deploy.outputs.preview-url && steps.rsshub.outputs.status == 'proceed'
        run: python Vercel/update.py $project ${{ env.VER }}
  
  waline:
    runs-on: ubuntu-latest
    name: Waline on Vercel
    env:
      project: Waline
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: python -m pip install --upgrade pymongo dnspython
      - name: Check Upstream
        id: waline
        run: |
          VER=$(curl -s -N https://api.github.com/repos/walinejs/waline/commits | grep -o '[0-9a-z]\{40\}' | head -n 1)
          result=$(python Vercel/check.py $project $VER)
          [[ $result ]] && echo "VER=$VER" >> $GITHUB_ENV || true
          [[ $result ]] && echo "::set-output name=status::proceed" || echo "Updated!"
      - name: Update
        if: steps.waline.outputs.status == 'proceed'
        run: |
          git clone --depth 1 https://github.com/walinejs/waline vercel
          cd vercel && git reset --hard ${{ env.VER }}
      - name: Vercel Deploy
        id: waline-deploy
        if: steps.waline.outputs.status == 'proceed'
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-comment: false
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: 'prj_Crgf8gjT791Zh2Tk4Zy3cXU2EcTy'
          working-directory: ./vercel/example
      - name: Update
        if: steps.waline-deploy.outputs.preview-url && steps.waline.outputs.status == 'proceed'
        run:
          python Vercel/update.py $project ${{ env.VER }}
  
  ariang:
    runs-on: ubuntu-latest
    name: AriaNg
    env:
      project: Ariang
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: python -m pip install --upgrade pymongo dnspython
      - name: Check Upstream
        id: ariang
        run: |
          VER=$(curl -s -N https://api.github.com/repos/mayswind/AriaNg/releases | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | head -n 1)
          result=$(python Vercel/check.py $project $VER)
          [[ $result ]] && echo "VER=$VER" >> $GITHUB_ENV || true
          [[ $result ]] && curl -sSL https://github.com/mayswind/AriaNg/releases/download/${VER}/AriaNg-${VER}.zip -o /tmp/tmp.zip && unzip -n /tmp/tmp.zip -d ./AriaNg || echo "Download failed!"
          [[ $result ]] && echo "::set-output name=status::proceed" || echo "Updated!"
      - name: Deploy to GitHub Pages
        if: steps.ariang.outputs.status == 'proceed'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          repo: Apocalypsor/Aria2-Web
          target_branch: main
          build_dir: ./AriaNg/
          fqdn: aria2w.eu.org
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      - name: Github âž¡ FTP
        if: steps.ariang.outputs.status == 'proceed'
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./AriaNg/
          server-dir: /ariang.dov.moe/
      - name: Update
        if: steps.ariang.outputs.status == 'proceed'
        run: python Vercel/update.py $project ${{ env.VER }}

  unlock-music:
    runs-on: ubuntu-latest
    name: Unlock-Music on Vercel
    env:
      project: UnlockMusic
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: python -m pip install --upgrade pymongo dnspython
      - name: Check Upstream
        id: unlock-music
        run: |
          VER=$(curl -s -N https://git.unlock-music.dev/api/v1/repos/um/web/commits | grep -o '[0-9a-z]\{40\}' | head -n 1)
          result=$(python Vercel/check.py $project $VER)
          [[ $result ]] && echo "VER=$VER" >> $GITHUB_ENV || true
          [[ $result ]] && echo "::set-output name=status::proceed" || echo "Updated!"
      - name: Update
        if: steps.unlock-music.outputs.status == 'proceed'
        run: |
          git clone --depth 1 -b master https://git.unlock-music.dev/um/web vercel
          cd vercel && git reset --hard ${{ env.VER }}
      - name: Vercel Deploy
        id: unlock-music-deploy
        if: steps.unlock-music.outputs.status == 'proceed'
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-comment: false
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: 'QmRPQNeqTWqzy71XZmp4M1W4Upe6k1fwMMy9hiT5WkP44m'
          working-directory: ./vercel
      - name: Update
        if: steps.unlock-music-deploy.outputs.preview-url && steps.unlock-music.outputs.status == 'proceed'
        run:
          python Vercel/update.py $project ${{ env.VER }}
  
  dnsflare:
    runs-on: ubuntu-latest
    name: Dnsflare on Vercel
    env:
      project: Dnsflare
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: python -m pip install --upgrade pymongo dnspython
      - name: Check Upstream
        id: dnsflare
        run: |
          VER=$(curl -s -N https://api.github.com/repos/5aaee9/Dnsflare/commits | grep -o '[0-9a-z]\{40\}' | head -n 1)
          result=$(python Vercel/check.py $project $VER)
          [[ $result ]] && echo "VER=$VER" >> $GITHUB_ENV || true
          [[ $result ]] && echo "::set-output name=status::proceed" || echo "Updated!"
      - name: Update
        if: steps.dnsflare.outputs.status == 'proceed'
        run: |
          git clone --depth 1 https://github.com/5aaee9/Dnsflare vercel
          cd vercel && git reset --hard ${{ env.VER }}
      - name: Vercel Deploy
        id: dnsflare-deploy
        if: steps.dnsflare.outputs.status == 'proceed'
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-comment: false
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: 'prj_r0wadXhpsHX0615AR87x4LOL3XNW'
          working-directory: ./vercel
      - name: Update
        if: steps.dnsflare-deploy.outputs.preview-url && steps.dnsflare.outputs.status == 'proceed'
        run:
          python Vercel/update.py $project ${{ env.VER }}
